{
  "terraform": {
    "required_providers": {
      "aws": {
        "source": "hashicorp/aws",
        "version": "~> 5.0"
      }
    }
  },
  "provider": {
    "aws": {
      "access_key": "test",
      "secret_key": "test",
      "region": "us-east-1",
      "skip_credentials_validation": true,
      "skip_metadata_api_check": true,
      "skip_requesting_account_id": true,
      "endpoints": {
        "apigateway": "http://localhost:4566",
        "iam": "http://localhost:4566",
        "lambda": "http://localhost:4566",
        "s3": "http://localhost:4566"
      },
      "s3_use_path_style": true
    }
  },
  "variable": {
    "account_id": {
      "description": "AWS Account ID",
      "type": "string",
      "default": "000000000000"
    },
    "api_name": {
      "description": "API Gateway name",
      "type": "string"
    },
    "s3_bucket_name": {
      "description": "S3 bucket name for Lambda code",
      "type": "string"
    },
    "lambda_functions": {
      "description": "List of Lambda functions to deploy",
      "type": "map(object({name=string,code_path=string,s3_key=string,api_path=string,http_method=string,policy_document=string}))"
    }
  },
  "resource": {
    "aws_s3_bucket": {
      "lambda_code_bucket": {
        "bucket": "${var.s3_bucket_name}"
      }
    },
    "aws_api_gateway_rest_api": {
      "main": {
        "name": "${var.api_name}"
      }
    },
    "aws_s3_object": {
      "lambda_code": {
        "for_each": "var.lambda_functions",
        "bucket": "${aws_s3_bucket.lambda_code_bucket.id}",
        "key": "${each.value.s3_key}",
        "source": "${each.value.code_path}",
        "etag": "${filemd5(each.value.code_path)}"
      }
    },
    "aws_iam_role": {
      "function_roles": {
        "for_each": "var.lambda_functions",
        "name": "${each.value.name}-role",
        "assume_role_policy": "{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}, \"Action\": \"sts:AssumeRole\"}]}"
      }
    },
    "aws_iam_role_policy_attachment": {
      "function_basic_execution": {
        "for_each": "var.lambda_functions",
        "role": "${aws_iam_role.function_roles[each.key].name}",
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      }
    },
    "aws_iam_role_policy": {
      "function_policies": {
        "for_each": "var.lambda_functions",
        "name": "${each.value.name}-policy",
        "role": "${aws_iam_role.function_roles[each.key].id}",
        "policy": "${file(each.value.policy_document)}"
      }
    },
    "aws_lambda_function": {
      "functions": {
        "for_each": "var.lambda_functions",
        "function_name": "${each.value.name}",
        "role": "${aws_iam_role.function_roles[each.key].arn}",
        "handler": "bootstrap",
        "runtime": "provided.al2023",
        "timeout": 30,
        "s3_bucket": "${var.s3_bucket_name}",
        "s3_key": "${each.value.s3_key}",
        "environment": {
          "variables": {
            "AWS_LAMBDA_LOG_LEVEL": "DEBUG"
          }
        },
        "depends_on": [
          "aws_iam_role_policy_attachment.function_basic_execution",
          "aws_iam_role_policy.function_policies",
          "aws_s3_object.lambda_code"
        ]
      }
    },
    "aws_api_gateway_resource": {
      "function_resources": {
        "for_each": "var.lambda_functions",
        "rest_api_id": "${aws_api_gateway_rest_api.main.id}",
        "parent_id": "${aws_api_gateway_rest_api.main.root_resource_id}",
        "path_part": "${each.value.api_path}"
      }
    },
    "aws_api_gateway_method": {
      "function_methods": {
        "for_each": "var.lambda_functions",
        "rest_api_id": "${aws_api_gateway_rest_api.main.id}",
        "resource_id": "${aws_api_gateway_resource.function_resources[each.key].id}",
        "http_method": "${each.value.http_method}",
        "authorization": "NONE"
      }
    },
    "aws_api_gateway_integration": {
      "function_integrations": {
        "for_each": "var.lambda_functions",
        "rest_api_id": "${aws_api_gateway_rest_api.main.id}",
        "resource_id": "${aws_api_gateway_resource.function_resources[each.key].id}",
        "http_method": "${aws_api_gateway_method.function_methods[each.key].http_method}",
        "integration_http_method": "POST",
        "type": "AWS_PROXY",
        "uri": "${aws_lambda_function.functions[each.key].invoke_arn}"
      }
    },
    "aws_lambda_permission": {
      "function_permissions": {
        "for_each": "var.lambda_functions",
        "statement_id": "AllowExecutionFromAPIGateway-${each.key}",
        "action": "lambda:InvokeFunction",
        "function_name": "${aws_lambda_function.functions[each.key].function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "${aws_api_gateway_rest_api.main.execution_arn}/*/*"
      }
    },
    "aws_api_gateway_deployment": {
      "main": {
        "depends_on": [
          "aws_api_gateway_integration.function_integrations"
        ],
        "rest_api_id": "${aws_api_gateway_rest_api.main.id}",
        "stage_name": "$default"
      }
    }
  },
  "output": {
    "function_urls": {
      "description": "URLs for all Lambda functions",
      "value": "${{ for func in var.lambda_functions : func.name => \"http://localhost:4566/restapis/${aws_api_gateway_rest_api.main.id}/$default/_user_request_/${func.api_path}\" }}"    
    },
    "function_arns": {
      "description": "ARNs of all Lambda functions",
      "value": "{ for func in var.lambda_functions : func.name => aws_lambda_function.functions[func.name].arn }"
    },
    "api_gateway_id": {
      "description": "ID of the API Gateway",
      "value": "${aws_api_gateway_rest_api.main.id}"
    }
  }
}
